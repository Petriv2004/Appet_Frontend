// Generated by view binder compiler. Do not edit!
package co.unipiloto.appet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import co.unipiloto.appet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegistrarAgendaBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Spinner Eliminarspinner;

  @NonNull
  public final Spinner Idspinner;

  @NonNull
  public final EditText descripcionHint;

  @NonNull
  public final Button eliminarCita;

  @NonNull
  public final EditText fechaHint;

  @NonNull
  public final Button guardarAgenda;

  @NonNull
  public final EditText horaHint;

  @NonNull
  public final TextView idmascota;

  @NonNull
  public final TextView razon;

  @NonNull
  public final Spinner razonHint;

  @NonNull
  public final TextView titleEliminar;

  @NonNull
  public final ToolbarBinding toolbar;

  private ActivityRegistrarAgendaBinding(@NonNull ScrollView rootView,
      @NonNull Spinner Eliminarspinner, @NonNull Spinner Idspinner,
      @NonNull EditText descripcionHint, @NonNull Button eliminarCita, @NonNull EditText fechaHint,
      @NonNull Button guardarAgenda, @NonNull EditText horaHint, @NonNull TextView idmascota,
      @NonNull TextView razon, @NonNull Spinner razonHint, @NonNull TextView titleEliminar,
      @NonNull ToolbarBinding toolbar) {
    this.rootView = rootView;
    this.Eliminarspinner = Eliminarspinner;
    this.Idspinner = Idspinner;
    this.descripcionHint = descripcionHint;
    this.eliminarCita = eliminarCita;
    this.fechaHint = fechaHint;
    this.guardarAgenda = guardarAgenda;
    this.horaHint = horaHint;
    this.idmascota = idmascota;
    this.razon = razon;
    this.razonHint = razonHint;
    this.titleEliminar = titleEliminar;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegistrarAgendaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegistrarAgendaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_registrar_agenda, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegistrarAgendaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Eliminarspinner;
      Spinner Eliminarspinner = ViewBindings.findChildViewById(rootView, id);
      if (Eliminarspinner == null) {
        break missingId;
      }

      id = R.id.Idspinner;
      Spinner Idspinner = ViewBindings.findChildViewById(rootView, id);
      if (Idspinner == null) {
        break missingId;
      }

      id = R.id.descripcionHint;
      EditText descripcionHint = ViewBindings.findChildViewById(rootView, id);
      if (descripcionHint == null) {
        break missingId;
      }

      id = R.id.eliminarCita;
      Button eliminarCita = ViewBindings.findChildViewById(rootView, id);
      if (eliminarCita == null) {
        break missingId;
      }

      id = R.id.fechaHint;
      EditText fechaHint = ViewBindings.findChildViewById(rootView, id);
      if (fechaHint == null) {
        break missingId;
      }

      id = R.id.guardarAgenda;
      Button guardarAgenda = ViewBindings.findChildViewById(rootView, id);
      if (guardarAgenda == null) {
        break missingId;
      }

      id = R.id.horaHint;
      EditText horaHint = ViewBindings.findChildViewById(rootView, id);
      if (horaHint == null) {
        break missingId;
      }

      id = R.id.idmascota;
      TextView idmascota = ViewBindings.findChildViewById(rootView, id);
      if (idmascota == null) {
        break missingId;
      }

      id = R.id.razon;
      TextView razon = ViewBindings.findChildViewById(rootView, id);
      if (razon == null) {
        break missingId;
      }

      id = R.id.razonHint;
      Spinner razonHint = ViewBindings.findChildViewById(rootView, id);
      if (razonHint == null) {
        break missingId;
      }

      id = R.id.titleEliminar;
      TextView titleEliminar = ViewBindings.findChildViewById(rootView, id);
      if (titleEliminar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      return new ActivityRegistrarAgendaBinding((ScrollView) rootView, Eliminarspinner, Idspinner,
          descripcionHint, eliminarCita, fechaHint, guardarAgenda, horaHint, idmascota, razon,
          razonHint, titleEliminar, binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
